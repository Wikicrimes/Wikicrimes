#-------------------------------------------------------------------
#MAPA DE KERNEL

kernelmap.nodesize = 5

kernelmap.bandwidth = 30

#-------------------------------------------------------------------
#ROTA SEGURA

#quantidade de rotas enviadas no retorno (ex: 5 melhores rotas encontradas)
saferoutes.default_number_of_alternatives = 1
#saferoutes.default_number_of_alternatives = 5
#saferoutes.default_number_of_alternatives = 10

saferoutes.tolerance_factor = 1

#peso da distancia no calculo do perigo (varia entre 0 e 1)
saferoutes.distance_influence = .1

#saferoutes.max_gm_requests = 1
#saferoutes.max_gm_requests = 5
#saferoutes.max_gm_requests = 10
saferoutes.max_gm_requests = 20
#saferoutes.max_gm_requests = 30
#saferoutes.max_gm_requests = 1000

saferoutes.default_zoom = 13

#em anos atras
saferoutes.default_start_date = 1

#distancia máxima entre pontos na obtenção de pontos e rotas aproximadas
saferoutes.point_approximation_limit = 1000

#tamanho do intervalo entre os pontos calculados para saber se são promissores (é multiplicado pelo tamanho do NODE do mapa de kernel) 
saferoutes.promising_points_grid_resolution = 3


#quanto menor, mais arodeios serão corrigidos pelo algorítmo
saferoutes.refinement.loop_prunning_tolerance = 4

saferoutes.refinement.max_iterations = 1


#
saferoutes.route_granularity = 5


#se a distancia entre dois pontos for no máximo este valor, eles serao considerados iguais 
#isto é usado qd se calcula se uma reta passa por um ponto 
geometry.point_approximation = 2